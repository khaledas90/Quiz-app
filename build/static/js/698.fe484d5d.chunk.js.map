{"version":3,"file":"static/js/698.fe484d5d.chunk.js","mappings":"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","sources":["component/signUp.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { RegisterUser } from '../store/UserSlice';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate } from 'react-router-dom'; \r\n\r\nconst defaultTheme = createTheme();\r\n\r\nexport default function SignUp() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate(); \r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    if (data) {\r\n      dispatch(RegisterUser({\r\n        email: data.get('email'),\r\n        password: data.get('password'),\r\n        firstName: data.get('firstName'),\r\n        lastName: data.get('lastName'),\r\n      }));\r\n\r\n      Swal.fire({\r\n        title: \"Successfully registered\",\r\n        text: \"Do you want to continue\",\r\n        icon: \"success\",\r\n        confirmButtonText: \"Ok\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          navigate(\"/login\");\r\n        }\r\n      });\r\n    }else{\r\n      Swal.fire({\r\n        title: \"Error\",\r\n        text: \"Do you want to continue\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign up\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"family-name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                  label=\"I agree to the terms and conditions\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                Already have an account?\r\n                <Link to={'/login'} variant=\"body2\">\r\n                   Sign in\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"names":["defaultTheme","createTheme","SignUp","dispatch","useDispatch","navigate","useNavigate","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","RegisterUser","email","get","password","firstName","lastName","Swal","title","text","icon","confirmButtonText","then","result","isConfirmed","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","mb","justifyContent","Link","to"],"sourceRoot":""}